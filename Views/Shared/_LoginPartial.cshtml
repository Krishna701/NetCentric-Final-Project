@using Microsoft.AspNetCore.Identity
@using EGovProject.Areas.Identity.Data

@inject SignInManager<LoginRegistrationUser> SignInManager
@inject UserManager<LoginRegistrationUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
}



@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" id="logoutForm" class="navbar-right" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <ul class="nav navbar-nav navbar-right">
            <li class="nav-item">
                <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="fa fa-user-o"></i>&nbsp;Welcome,@(user.FirstName ?? user.UserName)</a>
            </li>
            <li class="nav-item">
                <button type="submit" class="btn btn-link "><i class="fa fa-sign-out"></i>&nbsp;Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        @*<li class="nav-item">
            <a class="nav-link " id="register" asp-area="Identity" asp-page="/Account/Register"><i class="fa fa-user-plus" aria-hidden="true"></i>Sign Up</a>
        </li>*@
        <li class="nav-item">
            <a class="nav-link " id="login" asp-area="Identity" asp-page="/Account/Login"><i class="fa fa-sign-in" aria-hidden="true"></i>Login</a>
        </li>

    </ul>
}

